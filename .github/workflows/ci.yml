name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout du code source

      - name: Construire l'image Docker
        run: |
          docker build -t coldman47/crv-ci_cd:${{ github.sha }} .

      - name: Connexion Ã  Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Pousser l'image Docker
        run: |
          docker tag coldman47/crv-ci_cd:${{ github.sha }} coldman47/crv-ci_cd:latest
          docker push coldman47/crv-ci_cd:latest

  deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Set up Minikube
          run: |
            # Install Minikube and kubectl
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && sudo chmod +x minikube && sudo mv minikube /usr/local/bin/
            curl -LO https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl && sudo chmod +x kubectl && sudo mv kubectl /usr/local/bin/

            # Start Minikube with Docker driver
            minikube start --driver=docker

        - name: Set kubectl context
          run: |
            # Set kubeconfig for kubectl to use Minikube's
            echo $(minikube kubectl -- get kubeconfig) > ~/.kube/config

        # Step 4: Deploy to Minikube
        - name: Deploy to Minikube
          run: |
            # Run kubectl commands like deploy, get pods, etc.
            kubectl apply -f ./deployment.yaml
        
         # Step 5: Verify the deployment (optional)
        - name: Check Pods in Kubernetes
          run: |
            kubectl get pods